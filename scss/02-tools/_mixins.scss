@mixin var($property,$var) {
  #{$property}: map-get($vars,$var);
  #{$property}: var(--#{$var})
}

@mixin font($size) {
  font-size: nth(map-get($fonts,$size),1);
  line-height: nth(map-get($fonts,$size),2);
}

@mixin button ($type){
  @if $type == primary {
    background: $accent;
    color: #fff;
  } @else if $type == secondary{
    background: $secondary;
    color: $primary;
  }
  line-height : 3;
  border : 1px solid $primary;
}

/// Helper to clear inner floats
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

/// Helper to size an element
@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}



@mixin push--auto {
  margin: {
    left: auto;
    right: auto;
    }
}

@mixin wordbreak () {
  white-space: normal;
  word-break: break-word;
  word-break: break-all;
  hyphens: auto;
}


@mixin background-2x($path, $ext: "png") {

    $at1x_path: "#{$path}.#{$ext}";
    $at2x_path: "#{$path}@2x.#{$ext}";

    background-image: url("#{$at1x_path}");

    @media all and (-webkit-min-device-pixel-ratio : 1.5),
    all and (-o-min-device-pixel-ratio: 3/2),
    all and (min--moz-device-pixel-ratio: 1.5),
    all and (min-device-pixel-ratio: 1.5) {
        background-image: url("#{$at2x_path}");
  }
}
